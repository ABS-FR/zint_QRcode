Current as of latest clang-tidy-18 from Ubuntu 22.04 apt package (2023-12-26)

Requires cmake in "build" sub-directory with -DCMAKE_EXPORT_COMPILE_COMMANDS=ON (for "build/compile_commands.json")
and -DCMAKE_BUILD_TYPE=Debug (so `assert()`s defined), and then make (for Qt generated includes).

In project root directory (warning, slow):

clang-tidy-18 backend/*.c frontend/*.c backend_qt/*.cpp frontend_qt/*.cpp -p build/compile_commands.json

For "backend_tcl", which has no "compile_commands.json", specify the tcl include directory, e.g.

clang-tidy-18 backend_tcl/*.c -- -I/usr/include/tcl8.6

Options are in ".clang-tidy" (in the project root directory). The excluded checks are
`clang-analyzer-security.insecureAPI.strcpy` (for `strcpy()`, `strcat()` etc), and
`clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling` (for `sprintf()`).

The test suite (cmake given -DZINT_TEST=ON) can also be analysed with an additional check disabled:

clang-tidy-18 backend/tests/*.c frontend/tests/*.c backend_qt/tests/*.cpp \
	-checks='-clang-analyzer-optin.performance.Padding' -p build/compile_commands.json
